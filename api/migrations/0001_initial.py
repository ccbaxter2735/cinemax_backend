# Generated by Django 5.2.6 on 2025-10-17 13:54

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('full_name', models.CharField(blank=True, max_length=200)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('biography', models.TextField(blank=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='actors/photos/')),
            ],
        ),
        migrations.CreateModel(
            name='Casting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_name', models.CharField(blank=True, max_length=200, verbose_name='Rôle')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Ordre')),
                ('actor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.actor')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_fr', models.CharField(max_length=255, verbose_name='Titre (FR)')),
                ('title_original', models.CharField(blank=True, max_length=255, verbose_name='Titre original')),
                ('origin_country', models.CharField(blank=True, max_length=100, verbose_name="Pays d'origine")),
                ('duration_minutes', models.PositiveIntegerField(blank=True, help_text='Durée du film en minutes (ex: 125)', null=True, verbose_name='Durée (minutes)')),
                ('director', models.CharField(blank=True, max_length=255, verbose_name='Réalisateur')),
                ('description', models.TextField(blank=True, verbose_name='Descriptif')),
                ('release_date', models.DateField(blank=True, null=True, verbose_name='Date de sortie')),
                ('poster', models.ImageField(blank=True, null=True, upload_to='movies/posters/', verbose_name='Affiche')),
                ('illustration', models.ImageField(blank=True, null=True, upload_to='movies/illustrations/', verbose_name="Image d'illustration")),
                ('avg_rating', models.FloatField(blank=True, default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cast', models.ManyToManyField(blank=True, related_name='movies', through='api.Casting', to='api.actor')),
            ],
            options={
                'ordering': ['-release_date', 'title_fr'],
            },
        ),
        migrations.AddField(
            model_name='casting',
            name='movie',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.movie'),
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.PositiveSmallIntegerField()),
                ('review', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='api.movie')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movie_ratings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'movie')},
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(max_length=2000)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='api.movie')),
                ('rating', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.rating')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('liked', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movie_likes', to=settings.AUTH_USER_MODEL)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='api.movie')),
            ],
            options={
                'unique_together': {('user', 'movie')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='casting',
            unique_together={('movie', 'actor', 'role_name')},
        ),
    ]
